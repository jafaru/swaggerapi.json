{
    "swagger": "2.0",
   "info": {
      "title": "Marketo Flow Lookup",
      "x-providerName": "Adobe Marketo Engage",
      "description": "This document describes the schema used by Marketo Self-Service Flow actions.  By implementing an API conforming to this interface, you can create custom flow actions for use in Marketo Smart Campaigns.  Title will be used to define the service name when ingested in Marketo, while x-providerName should be the name of the organization providing the service.  Use 'version' to indicate the version of your service, use 'x-schemaVersion' to indicate which version of the Service Provider Interface that your service implements.  'servers' may be set if the service host is different from the URL used to access your API definition, if unset the same host will be assumed, values after the first will be ignored.",
      "license": {
        "name": "MIT",
        "url": "/license"
      },
      "version": "0.3.0",
      "x-schemaVersion": "0.3.0",
      "x-supportPage": "https://developers.marketo.com",
      "x-supportContact": "jafarulla.s@verticurl.com"
    "host": "localhost:8000",
    "basePath": "/",
    "tags": [
      {
        "name": "Users",
        "description": "API for users in the system"
      }
    ],
    "schemes": [
      "http"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/addUser": {
        "post": {
          "tags": [
            "Users"
          ],
          "description": "Create new user in system",
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User that we want to create",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New user is created",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        } 
      },
      "/users": {
        "get": {
            "tags": [
              "Users"
            ],
            "summary": "Get all users in system",
            "responses": {
              "200": {
                "description": "OK",
                "schema": {
                  "$ref": "#/definitions/Users"
                }
              }
            }
          }
      },
      "/user/{id}": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of user that we want to find",
            "type": "integer"
          }
        ],
        "delete": {
          "summary": "Delete user with given ID",
          "tags": [
            "Users"
          ],
          "responses": {
            "200": {
              "description": "User is deleted",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "put": {
          "summary": "Update user with give ID",
          "tags": [
            "Users"
          ],
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User with new values of properties",
              "schema": {
                "$ref": "#/definitions/updateUser"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User is updated",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "required": [
          "name",
          "_id",
          "companies"
        ],
        "properties": {
          "_id": {
            "type": "integer",
            "uniqueItems": true
          },
          "isPublic": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "books": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number"
                  }
                }
            }
                
          },
          "companies": {
            "type": "array",
            "items": {
                "type": "string"      
            }
                
          }
         
        }
      },
      "updateUser": {
        "required": [
          "name",
          "companies"
        ],
        "properties": {
          "isPublic": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "books": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number"
                  }
                }
            }
                
          },
          "companies": {
            "type": "array",
            "items": {
                "type": "string"      
            }
                
          }
         
        }
      },
      "Users": {
        "type": "array",
        "$ref": "#/definitions/User"
      }
     
    }
  }
